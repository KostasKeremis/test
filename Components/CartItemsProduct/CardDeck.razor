@using BlazorApp.Models
@using BlazorApp.Components.CartItemsProduct
<div class="card-deck">
    @for (var i = 0; i < Items.Count; i++)
    {
        var item = Items[i];
        <ItemCard Item=item OnRemoveItem=@( () => RemoveItemFromDeck(item)) />
        @if ((i + 1) % 4 == 0)
        {
            <div class="w-100" />
        }
    }
</div>


@code {
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public List<Item> Items { get; set; }

    [Parameter]
    public EventCallback<Item> RemoveItem { get; set; }

    public async Task RemoveItemFromDeck(Item item)
    {
        await RemoveItem.InvokeAsync(item);
    }

    protected override void OnInitialized()
    {
        Items.ForEach(it => it.IsVisible = true);
        base.OnInitialized();
    }

}
